[{"/Users/takanashi/Project/react/react-robots-ts/src/components/Board.tsx":"1","/Users/takanashi/Project/react/react-robots-ts/src/components/Square.tsx":"2","/Users/takanashi/Project/react/react-robots-ts/src/components/Game.tsx":"3","/Users/takanashi/Project/react/react-robots-ts/src/components/Control.tsx":"4","/Users/takanashi/Project/react/react-robots-ts/src/components/Info.tsx":"5","/Users/takanashi/Project/react/react-robots-ts/src/App.tsx":"6","/Users/takanashi/Project/react/react-robots-ts/src/index.tsx":"7","/Users/takanashi/Project/react/react-robots-ts/src/components/interfaces.ts":"8","/Users/takanashi/Project/react/react-robots-ts/src/components/Robots.ts":"9"},{"size":1314,"mtime":1607747803334,"results":"10","hashOfConfig":"11"},{"size":249,"mtime":1607684330052,"results":"12","hashOfConfig":"11"},{"size":2041,"mtime":1607760033531,"results":"13","hashOfConfig":"11"},{"size":1679,"mtime":1607697915261,"results":"14","hashOfConfig":"11"},{"size":786,"mtime":1607754787968,"results":"15","hashOfConfig":"11"},{"size":173,"mtime":1607608699860,"results":"16","hashOfConfig":"11"},{"size":219,"mtime":1607257910240,"results":"17","hashOfConfig":"11"},{"size":549,"mtime":1607608272196,"results":"18","hashOfConfig":"19"},{"size":6147,"mtime":1607760692024,"results":"20","hashOfConfig":"11"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"gvgqkp",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"u2cj2k",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/takanashi/Project/react/react-robots-ts/src/components/Board.tsx",["41"],"import React from \"react\";\nimport Square from \"components/Square\";\nimport { ISquare } from \"components/interfaces\";\nimport { RobotInfo, RobotType } from \"components/Robots\";\n\ninterface BoardProps {\n  width: number;\n  height: number;\n  robotList: RobotInfo[];\n}\n\nfunction put_robot(robotList: RobotInfo[], x: number, y: number): ISquare {\n  // forEach/find の中でreturnは使ってはいけない?\n  // https://www.hanachiru-blog.com/entry/2019/10/31/154305\n\n  let val: ISquare = null;\n  robotList.find((element) => {\n    if (element.x === x && element.y === y) {\n      switch (element.type) {\n        case RobotType.Player:\n          val = \"@\";\n          break;\n        case RobotType.Enemy:\n          val = \"+\";\n          break;\n        case RobotType.Scrap:\n          val = \"*\";\n          break;\n        default:\n          val = null;\n      }\n    }\n  });\n\n  return val;\n}\n\nconst Board = (props: BoardProps) => {\n  return (\n    <div>\n      {[...Array(props.height)].map((_, i) => {\n        return (\n          <div className=\"board-row\" key={i}>\n            {[...Array(props.width)].map((_, j) => {\n              return (\n                <Square value={put_robot(props.robotList, j, i)} key={j} />\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Board;\n","/Users/takanashi/Project/react/react-robots-ts/src/components/Square.tsx",[],"/Users/takanashi/Project/react/react-robots-ts/src/components/Game.tsx",[],"/Users/takanashi/Project/react/react-robots-ts/src/components/Control.tsx",[],"/Users/takanashi/Project/react/react-robots-ts/src/components/Info.tsx",["42"],"import React, { Fragment } from \"react\";\n\ntype InfoProps = {\n  level: number;\n  score: number;\n  status: string;\n};\n\nconst Info = (props: InfoProps) => {\n  return (\n    <React.Fragment>\n      <label>\n        <h4>Legend:</h4>\n      </label>\n      <div>\n        <label>+ : robot</label>\n      </div>\n      <div>\n        <label>* : junk heap</label>\n      </div>\n      <div>\n        <label>@ : you</label>\n      </div>\n      <label>\n        <h4>Level & Score:</h4>\n      </label>\n      <div>\n        <label>level : {props.level}</label>\n      </div>\n      <div>\n        <label>score : {props.score}</label>\n      </div>\n      <label>\n        <h4>Status:</h4>\n      </label>\n      <div>\n        <label>{props.status}</label>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Info;\n","/Users/takanashi/Project/react/react-robots-ts/src/App.tsx",["43"],"/Users/takanashi/Project/react/react-robots-ts/src/index.tsx",[],"/Users/takanashi/Project/react/react-robots-ts/src/components/interfaces.ts",[],"/Users/takanashi/Project/react/react-robots-ts/src/components/Robots.ts",[],{"ruleId":"44","severity":1,"message":"45","line":17,"column":28,"nodeType":"46","messageId":"47","endLine":17,"endColumn":30},{"ruleId":"48","severity":1,"message":"49","line":1,"column":17,"nodeType":"50","messageId":"51","endLine":1,"endColumn":25},{"ruleId":"48","severity":1,"message":"52","line":3,"column":16,"nodeType":"50","messageId":"51","endLine":3,"endColumn":25},"array-callback-return","Array.prototype.find() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","@typescript-eslint/no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'GameProps' is defined but never used."]